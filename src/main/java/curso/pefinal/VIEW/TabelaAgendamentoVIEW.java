package curso.pefinal.VIEW;

import curso.pefinal.DAO.AgendamentoDAO;
import curso.pefinal.DAO.TesteAgendamentoDAO;
import curso.pefinal.DTO.AgendamentoDTO;
import curso.pefinal.DTO.FuncionarioDTO;
import curso.pefinal.DTO.TesteAgendamentoDTO;
import java.beans.PropertyVetoException;
import java.sql.ResultSet;
import java.util.ArrayList;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author conta
 */
public class TabelaAgendamentoVIEW extends javax.swing.JFrame {

    /**
     * Creates new form Tabela
     */
    public TabelaAgendamentoVIEW() {
        initComponents();
        setExtendedState(MAXIMIZED_BOTH);
        listarAgendamentos();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tbagendamento = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        btnVoltar = new javax.swing.JButton();
        btnEditar = new javax.swing.JButton();
        btnExcluie = new javax.swing.JButton();
        btnCadastrar = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setResizable(false);

        jPanel1.setBackground(new java.awt.Color(0, 0, 0));

        tbagendamento.setBackground(new java.awt.Color(51, 51, 51));
        tbagendamento.setForeground(new java.awt.Color(255, 255, 255));
        tbagendamento.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "DATA", "HORÁRIO", "FUNCIONÁRIO", "CLIENTE"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tbagendamento.setSelectionForeground(new java.awt.Color(102, 102, 102));
        tbagendamento.setShowGrid(true);
        tbagendamento.setShowHorizontalLines(false);
        tbagendamento.setShowVerticalLines(false);
        tbagendamento.getTableHeader().setReorderingAllowed(false);
        jScrollPane1.setViewportView(tbagendamento);

        jLabel1.setBackground(new java.awt.Color(255, 255, 255));
        jLabel1.setFont(new java.awt.Font("Segoe UI", 2, 18)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("AGENDAMENTOS CADASTRADOS");

        btnVoltar.setText("VOLTAR");
        btnVoltar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnVoltarActionPerformed(evt);
            }
        });

        btnEditar.setText("EDITAR");
        btnEditar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEditarActionPerformed(evt);
            }
        });

        btnExcluie.setText("EXCLUIR");
        btnExcluie.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnExcluieActionPerformed(evt);
            }
        });

        btnCadastrar.setText("CADASTRAR");
        btnCadastrar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCadastrarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(6, 6, 6)
                                .addComponent(btnVoltar)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 331, Short.MAX_VALUE)
                                .addComponent(btnEditar)
                                .addGap(18, 18, 18)
                                .addComponent(btnExcluie)
                                .addGap(18, 18, 18)
                                .addComponent(btnCadastrar))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel1)
                                .addGap(0, 0, Short.MAX_VALUE)))
                        .addContainerGap(332, Short.MAX_VALUE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 891, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(12, Short.MAX_VALUE)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 474, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(119, 119, 119)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnVoltar)
                    .addComponent(btnEditar)
                    .addComponent(btnExcluie)
                    .addComponent(btnCadastrar))
                .addGap(25, 25, 25))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnVoltarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnVoltarActionPerformed
        // TODO add your handling code here:
        dispose();
    }//GEN-LAST:event_btnVoltarActionPerformed

    private void btnCadastrarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCadastrarActionPerformed
        // TODO add your handling code here:
        new CadastroAgendamentoVIEW().setVisible(true);
    }//GEN-LAST:event_btnCadastrarActionPerformed

    private void btnExcluieActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnExcluieActionPerformed
        excluirAgendamentos();
        listarAgendamentos();
    }//GEN-LAST:event_btnExcluieActionPerformed

    private void btnEditarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEditarActionPerformed
        alterarAgendamentos();
    }//GEN-LAST:event_btnEditarActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(TabelaAgendamentoVIEW.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(TabelaAgendamentoVIEW.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(TabelaAgendamentoVIEW.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(TabelaAgendamentoVIEW.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new TabelaAgendamentoVIEW().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnCadastrar;
    private javax.swing.JButton btnEditar;
    private javax.swing.JButton btnExcluie;
    private javax.swing.JButton btnVoltar;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tbagendamento;
    // End of variables declaration//GEN-END:variables

    private void listarAgendamentos(){
        try{
            AgendamentoDAO agendamento = new AgendamentoDAO();
            DefaultTableModel model = (DefaultTableModel) tbagendamento.getModel();
            
            model.setNumRows(0);
            ArrayList<AgendamentoDTO> agendamentos = new ArrayList<>();
            agendamentos = agendamento.listarAgendamento();
            TesteAgendamentoDTO testeCli = new TesteAgendamentoDTO();
            TesteAgendamentoDTO testeFun = new TesteAgendamentoDTO();
            TesteAgendamentoDTO horario = new TesteAgendamentoDTO();
            
            String nomeFun,nomeCli,hora;
            for(int cont = 0; cont < agendamentos.size(); cont++){
                
                //troca o id do cliente por string
                testeCli.setId(agendamentos.get(cont).getCliente());
                
                TesteAgendamentoDAO testeagenCli = new TesteAgendamentoDAO();

                ResultSet rs1;
                rs1 = testeagenCli.agendamentoCliente(testeCli);
                
                
                //troca o id do funcionário por string
                testeFun.setId(agendamentos.get(cont).getFuncionario());
                
                TesteAgendamentoDAO testeagenFun = new TesteAgendamentoDAO();

                ResultSet rs2;
                
                rs2 = testeagenFun.agendamentoFuncionario(testeFun);

                
                //troca o id do horário por string
                horario.setId(agendamentos.get(cont).getHorario());
                
                TesteAgendamentoDAO testeagenHora = new TesteAgendamentoDAO();

                ResultSet rs3;
                
                rs3 = testeagenHora.agendamentoHorario(horario);
                
                if(rs1.next() && rs2.next() && rs3.next()){
                    nomeCli = rs1.getString("nome");
                    nomeFun = rs2.getString("nome");
                    hora = rs3.getString("hora");
                    model.addRow(new Object[]{
                        agendamentos.get(cont).getData(),
                        hora,
                        nomeFun,
                        nomeCli
                        
                    });
                    
                }else{
                 JOptionPane.showMessageDialog(null, "Cliente ou Funcionário não encontrado");
                }
                
                
            }
            
        }catch(Exception erro){
            JOptionPane.showMessageDialog(null, "Listar TabelaAgendamentoVIEW: " + erro);
        }

    }
    
    private void alterarAgendamentos(){
        
        String idInicial;
        int selecionar = tbagendamento.getSelectedRow();
        DefaultTableModel model = (DefaultTableModel) tbagendamento.getModel();
        idInicial = model.getValueAt(selecionar, 0).toString();
        int id = Integer.parseInt(idInicial);
                
        CadastroAgendamentoVIEW cadAgen = new CadastroAgendamentoVIEW();
        cadAgen.setVisible(true);
        cadAgen.alterarAgendamentos(id);
        
        dispose();
    }
    
    private void excluirAgendamentos(){
        String idInicial;
        int selecionar = tbagendamento.getSelectedRow();
        DefaultTableModel model = (DefaultTableModel) tbagendamento.getModel();

        //retorna o valor no campo da linha selecionar e da coluna 0
        idInicial = model.getValueAt(selecionar, 0).toString();
        int id = Integer.parseInt(idInicial);
        try{

            AgendamentoDAO agendamento = new AgendamentoDAO();

            Object[] opcoes = { "Sim", "Não" }; 
            int resposta = JOptionPane.showOptionDialog(null, "Confirma a Exclusão?", "", JOptionPane.YES_NO_OPTION, JOptionPane.QUESTION_MESSAGE, null, opcoes, opcoes[0]);
            if(resposta == 0){
                agendamento.excluirAgendamento(id);
            }

            
            
        }catch(Exception erro){
            JOptionPane.showMessageDialog(null, "Excluir AgendamentoVIEW: " + erro);
        }
    }
}
