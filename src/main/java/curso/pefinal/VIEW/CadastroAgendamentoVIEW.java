/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package curso.pefinal.VIEW;

import Util.Validacoes;
import curso.pefinal.DAO.AgendamentoDAO;
import curso.pefinal.DAO.ClienteDAO;
import curso.pefinal.DAO.FuncionarioDAO;
import curso.pefinal.DAO.HorarioDAO;
import curso.pefinal.DAO.ServicoDAO;
import curso.pefinal.DAO.TesteCPFDAO;
import curso.pefinal.DTO.AgendamentoDTO;
import curso.pefinal.DTO.ClienteDTO;
import curso.pefinal.DTO.EnderecoDTO;
import curso.pefinal.DTO.FuncionarioDTO;
import curso.pefinal.DTO.HorarioDTO;
import curso.pefinal.DTO.LoginDTO;
import curso.pefinal.DTO.ServicoDTO;
import curso.pefinal.DTO.TesteCPFDTO;
import java.awt.event.ItemEvent;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Luanna
 */
public class CadastroAgendamentoVIEW extends javax.swing.JFrame {

    /**
     * Creates new form AgendamentoVIEW
     */
    public CadastroAgendamentoVIEW() {
        initComponents();
        alterarBtn.setVisible(false);
        cadastrarBtn.setVisible(true);
        cod.setVisible(false);
        codTxt.setVisible(false);
        setExtendedState(MAXIMIZED_BOTH);
        listarClientesComboBox();
        
        listarServicosComboBox();
        listarHorariosComboBox();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        funcionarioTxt = new javax.swing.JComboBox<>();
        clienteTxt = new javax.swing.JComboBox<>();
        servicoTxt = new javax.swing.JComboBox<>();
        nomeLabel = new javax.swing.JLabel();
        nomeLabel1 = new javax.swing.JLabel();
        nomeLabel2 = new javax.swing.JLabel();
        horarioTxt = new javax.swing.JComboBox<>();
        nomeLabel3 = new javax.swing.JLabel();
        dataTxt = new com.toedter.calendar.JCalendar();
        nomeLabel4 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        observacaoTxt = new javax.swing.JTextArea();
        btnVoltar = new javax.swing.JButton();
        cadastrarBtn = new javax.swing.JButton();
        alterarBtn = new javax.swing.JButton();
        cod = new javax.swing.JLabel();
        codTxt = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(0, 0, 0));

        funcionarioTxt.setBackground(new java.awt.Color(51, 51, 51));
        funcionarioTxt.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        funcionarioTxt.setForeground(new java.awt.Color(255, 255, 255));
        funcionarioTxt.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "..." }));
        funcionarioTxt.setBorder(null);
        funcionarioTxt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                funcionarioTxtActionPerformed(evt);
            }
        });

        clienteTxt.setBackground(new java.awt.Color(51, 51, 51));
        clienteTxt.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        clienteTxt.setForeground(new java.awt.Color(255, 255, 255));
        clienteTxt.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "..." }));
        clienteTxt.setBorder(null);
        clienteTxt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                clienteTxtActionPerformed(evt);
            }
        });

        servicoTxt.setBackground(new java.awt.Color(51, 51, 51));
        servicoTxt.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        servicoTxt.setForeground(new java.awt.Color(255, 255, 255));
        servicoTxt.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "..." }));
        servicoTxt.setBorder(null);
        servicoTxt.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                servicoTxtItemStateChanged(evt);
            }
        });
        servicoTxt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                servicoTxtActionPerformed(evt);
            }
        });

        nomeLabel.setBackground(new java.awt.Color(153, 153, 153));
        nomeLabel.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        nomeLabel.setForeground(new java.awt.Color(255, 255, 255));
        nomeLabel.setText("CLIENTE:");

        nomeLabel1.setBackground(new java.awt.Color(153, 153, 153));
        nomeLabel1.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        nomeLabel1.setForeground(new java.awt.Color(255, 255, 255));
        nomeLabel1.setText("FUNCIONÁRIO:");

        nomeLabel2.setBackground(new java.awt.Color(153, 153, 153));
        nomeLabel2.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        nomeLabel2.setForeground(new java.awt.Color(255, 255, 255));
        nomeLabel2.setText("SERVIÇO:");

        horarioTxt.setBackground(new java.awt.Color(51, 51, 51));
        horarioTxt.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        horarioTxt.setForeground(new java.awt.Color(255, 255, 255));
        horarioTxt.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "..." }));
        horarioTxt.setBorder(null);
        horarioTxt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                horarioTxtActionPerformed(evt);
            }
        });

        nomeLabel3.setBackground(new java.awt.Color(153, 153, 153));
        nomeLabel3.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        nomeLabel3.setForeground(new java.awt.Color(255, 255, 255));
        nomeLabel3.setText("HORÁRIO:");

        nomeLabel4.setBackground(new java.awt.Color(153, 153, 153));
        nomeLabel4.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        nomeLabel4.setForeground(new java.awt.Color(255, 255, 255));
        nomeLabel4.setText("OBSERVAÇÃO:");

        observacaoTxt.setColumns(20);
        observacaoTxt.setRows(5);
        jScrollPane1.setViewportView(observacaoTxt);

        btnVoltar.setText("VOLTAR");
        btnVoltar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnVoltarActionPerformed(evt);
            }
        });

        cadastrarBtn.setBackground(new java.awt.Color(51, 51, 51));
        cadastrarBtn.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        cadastrarBtn.setForeground(new java.awt.Color(0, 0, 0));
        cadastrarBtn.setText("CADASTRAR");
        cadastrarBtn.setBorder(null);
        cadastrarBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cadastrarBtnActionPerformed(evt);
            }
        });

        alterarBtn.setBackground(new java.awt.Color(51, 51, 51));
        alterarBtn.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        alterarBtn.setForeground(new java.awt.Color(0, 0, 0));
        alterarBtn.setText("ALTERAR");
        alterarBtn.setBorder(null);
        alterarBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                alterarBtnActionPerformed(evt);
            }
        });

        cod.setBackground(new java.awt.Color(153, 153, 153));
        cod.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        cod.setForeground(new java.awt.Color(255, 255, 255));
        cod.setText("CÓDIGO:");

        codTxt.setBackground(new java.awt.Color(51, 51, 51));
        codTxt.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        codTxt.setForeground(new java.awt.Color(255, 255, 255));
        codTxt.setBorder(null);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(51, 51, 51)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(cod)
                        .addGap(110, 110, 110)
                        .addComponent(codTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(nomeLabel4)
                        .addGap(18, 18, 18)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(nomeLabel1, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(nomeLabel)
                                    .addComponent(nomeLabel3)
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addGap(8, 8, 8)
                                        .addComponent(nomeLabel2)))
                                .addGap(30, 30, 30)))
                        .addGap(28, 28, 28)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(clienteTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 193, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(funcionarioTxt, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 193, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(horarioTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 193, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(servicoTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 193, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(41, 41, 41)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(dataTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 341, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addComponent(btnVoltar)
                                        .addGap(33, 33, 33)
                                        .addComponent(alterarBtn)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(cadastrarBtn)
                                        .addGap(71, 71, 71)))))))
                .addContainerGap(35, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(25, 25, 25)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cod)
                    .addComponent(codTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(nomeLabel)
                    .addComponent(clienteTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(46, 46, 46)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(nomeLabel2)
                    .addComponent(servicoTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(44, 44, 44)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(nomeLabel1)
                    .addComponent(funcionarioTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(48, 48, 48)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(horarioTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(nomeLabel3))
                .addGap(55, 55, 55)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(nomeLabel4)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(55, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(dataTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 247, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(115, 115, 115)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnVoltar)
                    .addComponent(cadastrarBtn)
                    .addComponent(alterarBtn))
                .addGap(20, 20, 20))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void funcionarioTxtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_funcionarioTxtActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_funcionarioTxtActionPerformed

    private void clienteTxtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_clienteTxtActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_clienteTxtActionPerformed

    private void servicoTxtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_servicoTxtActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_servicoTxtActionPerformed

    private void horarioTxtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_horarioTxtActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_horarioTxtActionPerformed

    private void servicoTxtItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_servicoTxtItemStateChanged
        int opcao = 0;
        if (evt.getStateChange() == ItemEvent.SELECTED) {
            if(servicoTxt.getSelectedIndex() == 1){
                opcao = 1;
                listarFuncionariosComboBox(opcao);
            }else if(servicoTxt.getSelectedIndex() == 2){
                opcao = 2;
                listarFuncionariosComboBox(opcao);
            }else{
                opcao = 0;
                listarFuncionariosComboBox(opcao);
            }
            

        }
        


        
    }//GEN-LAST:event_servicoTxtItemStateChanged

    private void btnVoltarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnVoltarActionPerformed
        // TODO add your handling code here:
        dispose();
    }//GEN-LAST:event_btnVoltarActionPerformed

    private void cadastrarBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cadastrarBtnActionPerformed
        int opcao = 0;
        cadastrarAgendamento(opcao);
    }//GEN-LAST:event_cadastrarBtnActionPerformed

    private void alterarBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_alterarBtnActionPerformed
        int opcao = 1;
        cadastrarAgendamento(opcao);
    }//GEN-LAST:event_alterarBtnActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(CadastroAgendamentoVIEW.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(CadastroAgendamentoVIEW.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(CadastroAgendamentoVIEW.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(CadastroAgendamentoVIEW.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new CadastroAgendamentoVIEW().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton alterarBtn;
    private javax.swing.JButton btnVoltar;
    private javax.swing.JButton cadastrarBtn;
    private javax.swing.JComboBox<String> clienteTxt;
    private javax.swing.JLabel cod;
    private javax.swing.JTextField codTxt;
    private com.toedter.calendar.JCalendar dataTxt;
    private javax.swing.JComboBox<String> funcionarioTxt;
    private javax.swing.JComboBox<String> horarioTxt;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel nomeLabel;
    private javax.swing.JLabel nomeLabel1;
    private javax.swing.JLabel nomeLabel2;
    private javax.swing.JLabel nomeLabel3;
    private javax.swing.JLabel nomeLabel4;
    private javax.swing.JTextArea observacaoTxt;
    private javax.swing.JComboBox<String> servicoTxt;
    // End of variables declaration//GEN-END:variables

    private void listarClientesComboBox(){
        try{
            ClienteDAO cliente = new ClienteDAO();
            ArrayList<ClienteDTO> clientes = new ArrayList<>();
            clientes = cliente.listarCliente();
            
            for(int cont = 0; cont < clientes.size(); cont++){
                clienteTxt.addItem(Integer.toString(clientes.get(cont).getId_cliente()));
            }
            
        }catch(Exception erro){
            JOptionPane.showMessageDialog(null, "ComboBOXCliente: " + erro);
        }

    }
    
    private void listarFuncionariosComboBox(int opcao){
        try{
            funcionarioTxt.removeAllItems();
            funcionarioTxt.addItem("...");
            FuncionarioDAO funcionario = new FuncionarioDAO();
            ArrayList<FuncionarioDTO> funcionarios = new ArrayList<>();
            
            funcionarios = funcionario.listarFuncionario();
            
            for(int cont = 0; cont < funcionarios.size(); cont++){
                if(opcao == 1){
                    if(funcionarios.get(cont).getFuncao() == 1){
                        funcionarioTxt.addItem(funcionarios.get(cont).getNome());
                    }
                    
                }if(opcao == 2){
                    if(funcionarios.get(cont).getFuncao() == 2){
                        funcionarioTxt.addItem(funcionarios.get(cont).getNome());
                    }
                    
                }
                
            }
            
        }catch(Exception erro){
            JOptionPane.showMessageDialog(null, "ComboBOXFuncionario: " + erro);
        }

    }
    
    private void listarServicosComboBox(){
        try{
            ServicoDAO servico = new ServicoDAO();
            ArrayList<ServicoDTO> servicos = new ArrayList<>();
            servicos = servico.listarServico();
            
            for(int cont = 0; cont < servicos.size(); cont++){
                servicoTxt.addItem(servicos.get(cont).getNome());
            }
            
        }catch(Exception erro){
            JOptionPane.showMessageDialog(null, "ComboBOXServico: " + erro);
        }

    }

    private void listarHorariosComboBox(){
        try{
            HorarioDAO horario = new HorarioDAO();
            ArrayList<HorarioDTO> horarios = new ArrayList<>();
            horarios = horario.listarHorario();
            
            for(int cont = 0; cont < horarios.size(); cont++){
                horarioTxt.addItem(horarios.get(cont).getHora());
            }
            
        }catch(Exception erro){
            JOptionPane.showMessageDialog(null, "ComboBOXHorario: " + erro);
        }

    }
    
    private void cadastrarAgendamento(int opcao){
       
        try{
        
        
        if(limitaCaractere() == true){
                            
                
                
            
                String observacao, data;
                int cliente, servico, funcionario, horario;

                cliente = clienteTxt.getSelectedIndex();
                servico = servicoTxt.getSelectedIndex();
                funcionario = funcionarioTxt.getSelectedIndex();
                horario = horarioTxt.getSelectedIndex();
                observacao = observacaoTxt.getText();

                SimpleDateFormat sdf = new SimpleDateFormat("dd/MM/yyyy");
                data = sdf.format(dataTxt.getDate());
                
                String dia = data.substring(0, 2);
                String mes = data.substring(3, 5);
                String ano = data.substring(6);
                    
                String dataF = ano+"-"+mes+"-"+dia;
                
                AgendamentoDTO agendamento = new AgendamentoDTO();
                agendamento.setData(dataF);
                agendamento.setCliente(cliente);
                agendamento.setServico(servico);
                agendamento.setFuncionario(funcionario);
                agendamento.setHorario(horario);
                agendamento.setObservacao(observacao);
                
                if(opcao == 1){
                    //cod = Integer.parseInt(txtcod.getText());

                    //cliente.setId(cod);
                }
                //enviando para o bd
                AgendamentoDAO objAgendamentoDAO = new AgendamentoDAO();

                if(opcao == 0){
                    objAgendamentoDAO.cadastrarAgendamento(agendamento);
                    JOptionPane.showMessageDialog(null, "Cadastrado com Sucesso!!");
                }else{
                    //objAgendamentoDAO.alterarCliente(cliente);
                    JOptionPane.showMessageDialog(null, "Alterado com Sucesso!!");
                }
                    
                dispose();
                    
            }
        }catch(Exception erro){
            JOptionPane.showMessageDialog(null,"CadastroAgendamentoVIEW: " + erro);
        }
    }

    public void alterarAgendamentos(int id){
        
        alterarBtn.setVisible(true);
        cadastrarBtn.setVisible(false);
        cod.setVisible(true);
        codTxt.setVisible(true);
        codTxt.setEditable(false);
        try{
            AgendamentoDAO agendamento = new AgendamentoDAO();
        
            AgendamentoDTO agendamentoDTO = new AgendamentoDTO();
            /*agendamentoDTO = agendamento.agendamentoAlteracao(id);
        
            EnderecoDTO endereco = new EnderecoDTO();
            endereco = clienteDTO.getEndereco();
            
            LoginDTO login = new LoginDTO();
            login = clienteDTO.getLogin();
            
            codTxt.setText(Integer.toString(clienteDTO.getId_cliente()));
            nomeTxt.setText(clienteDTO.getNome());
            CPFTxt.setText(clienteDTO.getCpf());
            datanascTxt.setText(clienteDTO.getData_nasc());
            telefoneTxt.setText(clienteDTO.getTelefone());
            ruaTxt.setText(endereco.getRua());
            numeroTxt.setText(Integer.toString(endereco.getNumero()));
            bairroTxt.setText(endereco.getBairro());
            CEPTxt.setText(endereco.getCep());
            complementoTxt.setText(endereco.getComplemento());
            cidadeTxt.setText(endereco.getCidade());
            estadoTxt.setSelectedIndex(endereco.getEstado());
            senhaTxt.setText(login.getPassword());
            
            */
        }
        
        catch(Exception erro){
            
            JOptionPane.showMessageDialog(null, "Alterar CadastroAgendamentoVIEW: " + erro);
        }
        
        
    }
    
    private boolean limitaCaractere(){
        boolean teste = false;
        
        SimpleDateFormat sdf = new SimpleDateFormat("dd/MM/yyyy");
        String data = sdf.format(dataTxt.getDate());
        if(clienteTxt.getSelectedIndex() == 0){
            JOptionPane.showMessageDialog(null, "Nenhum Cliente Selecionado");
            clienteTxt.requestFocus();
        }else if(servicoTxt.getSelectedIndex() == 0){
            JOptionPane.showMessageDialog(null, "Nenhum Serviço Selecionado");
            servicoTxt.requestFocus();
        }else if(funcionarioTxt.getSelectedIndex() == 0){
            JOptionPane.showMessageDialog(null, "Nenhum Funcionário Selecionado");
            funcionarioTxt.requestFocus();
        }else if(horarioTxt.getSelectedIndex() == 0){
            JOptionPane.showMessageDialog(null, "Nenhum Horário Selecionado");
            horarioTxt.requestFocus();
        }else if(Validacoes.dataFutura(data) == false ){
            JOptionPane.showMessageDialog(null, "Data inválida");
            dataTxt.requestFocus();
        }else{
            teste = true;
        }
        
        return teste;
    }
}
